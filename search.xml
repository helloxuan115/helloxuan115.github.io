<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello Blog</title>
    <url>/2020/04/04/Hello-Blog/</url>
    <content><![CDATA[<p>##1</p>
<p>hahaha</p>
<p>##2</p>
<p>hehehe</p>
<a id="more"></a>]]></content>
      <categories>
        <category>hello</category>
      </categories>
      <tags>
        <tag>FIRST</tag>
        <tag>SECOND</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/04/04/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      <categories>
        <category>dd</category>
      </categories>
  </entry>
  <entry>
    <title>Markdown</title>
    <url>/2020/04/07/%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h1 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown(#)"></a>Markdown(#)</h1><h2 id="所有字符都是英文小写"><a href="#所有字符都是英文小写" class="headerlink" title="所有字符都是英文小写(##)"></a>所有字符都是英文小写(##)</h2><h3 id="一些基本操作"><a href="#一些基本操作" class="headerlink" title="一些基本操作(###)"></a>一些基本操作(###)</h3><a id="more"></a>

<ul>
<li><p>列表1 (- )</p>
</li>
<li><p>列表2(- )</p>
<p>a 子列表</p>
<p>b 子列表2</p>
<ul>
<li>子列表 3(- )</li>
</ul>
</li>
<li><p>列表3(- )</p>
</li>
</ul>
<hr>
<p><a href="www.baidu.com">百度导航</a>    （【xxx】（地址））</p>
<hr>
<p>图片 （  ！【xxx】（地址））</p>
<p><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1586244892518&di=9c8a5bae84812da44e6311ac94beccb9&imgtype=0&src=http%3A%2F%2Fa4.att.hudong.com%2F21%2F09%2F01200000026352136359091694357.jpg" alt="xxx"></p>
<hr>
<p><em>字体是斜的</em> （**）</p>
<p><strong>字体加粗</strong>（****）</p>
<hr>
<p><code>&lt;html&gt;&lt;/html&gt;</code>(``)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">	&lt;head&gt;</span><br><span class="line">	    &lt;title&gt;我是标题&lt;&#x2F;title&gt;</span><br><span class="line">	&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		(&#96;&#96;&#96;&#96;&#96;&#96;)</span><br><span class="line">	&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>



<hr>
<p>分割线（➖ *3）</p>
<blockquote>
<p>我才没有引用呢    引用(&gt;)</p>
</blockquote>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>-首发</tag>
      </tags>
  </entry>
  <entry>
    <title>Eclipse 在tomcat中配置java project</title>
    <url>/2020/04/18/xxx/</url>
    <content><![CDATA[<h1 id="Eclipse-在tomcat中配置java-project"><a href="#Eclipse-在tomcat中配置java-project" class="headerlink" title="Eclipse 在tomcat中配置java project"></a>Eclipse 在tomcat中配置java project</h1><p>为什么不用Eclipse EE版本,或者MyEclipse的自带的tomcat 启动？<br>因为大家工作以后，最常见的工作环境是： 在Windows下开发，然后把开发好的web项目部署到Linux的服务器上。 是不可能在Linux启动一个eclipse/myeclipse，然后里面跑一个tomcat来运行的！<br>所以尽可能采用接近生产环境的方式部署web应用，也是为了让以后能够工作的更加平滑。</p>
<a id="more"></a>

<hr>
<p>打开tomcat/conf/server.xml，在&lt;Host下增加一个&lt;context</p>
<p>&lt;Host name=”localhost”  appBase=”webapps”</p>
<p>​            unpackWARs=”true” autoDeploy=”true”&gt;</p>
<p>​    <Context path="/tmall" docBase="(项目地址)E:\\project\\tmall\\web" debug="0" reloadable="false" /></p>
<p>一个普通的java项目下我们需要手动创建文件夹web/WEB-INF.   web.xml文件就放在web/WEB-INF这个文件夹下.</p>
<p>web/WEB-INF/lib下配置所需的jar包 如:jstl.jar servlet-api.jar等。</p>
<p>一般这时候就可以运行startup.bat跑项目了.</p>
<hr>
<p>有时候因为tomcat无法找到对应的class文件,导致出现404的错误,以下是解决办法:</p>
<p>我们在Eclipse中右键项目然后Bulid Path–&gt;Configure Bulid Path,在Source下面设置Defalut output folder为: 项目名称/web/WEB-INF/classes (如果没有则创建这个文件夹) .之后我们在Eclipse主界面Project这个菜单项下Clean我们的项目,最后重启tomcat,这样我们的项目就可以正常运行了.</p>
]]></content>
      <categories>
        <category>Eclipse</category>
      </categories>
      <tags>
        <tag>-Eclipse</tag>
      </tags>
  </entry>
  <entry>
    <title>阿里云部署项目后连接数据库数据失败解决办法</title>
    <url>/2020/05/31/%E9%98%BF%E9%87%8C%E4%BA%91%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<a id="more"></a>

<p>最近在将普通java项目部署到阿里云上测试的时候发现网页只显示前端信息,不显示数据库中的信息,项目<br>在本地运行并没有问题,鼓捣了半天之后终于正常显示了,以下是解决方法:</p>
<p>​    <img src="https://github.com/helloxuan115/MarkDownPhotos/raw/master/failure.png" alt="失败"></p>
<p>​    1.确保linux下的mysql以及tomcat已安装并可以成功运行</p>
<p>​        linux中输入执行:</p>
<p>​                /usr/local/tomcat7/bin/startup.sh        启动tomcat访问:  (公网ip地址:8080)显示tomcat界面则成功</p>
<p>​                mysql -u用户名 -p密码            登录mysql</p>
<p>​        mysql中输入:</p>
<p>​                show databases;    显示数据库则成功</p>
<ol start="2">
<li><p>确认项目文件以及sql文件上传成功</p>
<p>​    linux中输入执行:</p>
<p>​            mysql -u 用户名 -p密码 –default-character-set=utf8 tmall &lt; /home/wwwroot/ftptest/tmall.sql  覆盖数据库</p>
<p>​    </p>
<p>​    mysql中输入:</p>
<p>​            CREATE DATABASE tmall DEFAULT CHARACTER SET utf8;  创建数据库</p>
<p>​            use tmall;</p>
<p>​            show tables；</p>
<p>​            select count(*) from product;        检查数据是否存在</p>
</li>
<li><p>授权</p>
<p>linux中输入执行:</p>
<p>​        GRANT ALL PRIVILEGES ON <em>.</em> TO ‘user’@’%’ IDENTIFIED BY ‘password’ WITH GRANT OPTION; // %:表示从任何主机连接到mysql服务器</p>
</li>
</ol>
<p>   ​        FLUSH  PRIVILEGES;</p>
<ol start="4">
<li><p>在阿里云服务器管理中的安全组里添加端口3306(之前的tomcat端口8080默认已经添加了),授权对象为0.0.0.0/0(所有)</p>
</li>
<li><p>访问我们的项目显示成功</p>
<p><img src="https://github.com/helloxuan115/MarkDownPhotos/raw/master/success.png" alt="成功"></p>
<p>​    </p>
</li>
</ol>
<p>   .</p>
<p>   ​    </p>
]]></content>
      <tags>
        <tag>linux 阿里云</tag>
      </tags>
  </entry>
  <entry>
    <title>AboutNginx</title>
    <url>/2020/08/06/AboutNginx/</url>
    <content><![CDATA[<p>#nginx学习心得</p>
<p>1.在nginx.conf中设置可以实现反向代理,静态分离</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">       	proxy_pass http:<span class="comment">//127.0.0.1:8111;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>location /</strong> 表示处理所有请求<br><strong>proxy_pass <a href="http://127.0.0.1:8111" target="_blank" rel="noopener">http://127.0.0.1:8111</a>;</strong> 表示把请求都交给<a href="http://127.0.0.1:8111来处理">http://127.0.0.1:8111来处理</a></p>
<a id="more"></a>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">location ~\.(css|js|png)$ &#123;</span><br><span class="line">           root C:&#x2F;Users&#x2F;X7TI&#x2F;Downloads&#x2F;tomcat_8111&#x2F;webapps&#x2F;ROOT;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<p>这表示所有的css js png访问都由nginx来做，访问的地址是</p>
<p>C:/Users/X7TI/Downloads/tomcat_8111/webapps/ROOT</p>
<p><strong>注意</strong>:填写本地地址的时候，要用正斜杠 / 不要用反斜杠 ;</p>
<p>使用自己本机地址时注意地址中文件名不要出现如<strong>Hello World</strong>这样的有空格的文件名，否则可能会报这样的错误：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">invalid number of arguments in &quot;root&quot; directive in C:\Users\Hello World\Downloads\nginx&#x2F;conf&#x2F;nginx.c</span><br></pre></td></tr></table></figure>



<p>root后面如果有不同地址,使用”<strong>,</strong>“隔开即可.</p>
<p>反向代理意义:</p>
<p>因为nginx在处理静态文件的吞吐量上面比tomcat好很多，通常他们俩配合，不会把所有的请求都如本例所示的交给tomcat, 而是把静态请求交给nginx，动态请求，如jsp, servlet,ssm， struts等请求交给tomcat. 从而达到动静分离的效果。 </p>
<p>2.负载均衡</p>
<p>增加一个upstream ，用来指向两个tomcat</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">upstream tomcat_8111_8222&#123;</span><br><span class="line">server	127.0.0.1:8111 weight&#x3D;1;</span><br><span class="line">server	127.0.0.1:8222 weight&#x3D;2;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<p>然后修改location，反向代理到上述配置。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">	location &#x2F; &#123;</span><br><span class="line">       	proxy_pass http:&#x2F;&#x2F;tomcat_8111_8222;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>3.session共享</p>
<p>使用redis+tomcat-sessoin-manager</p>
<p>打开redis</p>
<p>两个tomcat中都修改tomcat/conf/context.xml</p>
<p>增加下面代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;Valve className&#x3D;&quot;com.orangefunction.tomcat.redissessions.RedisSessionHandlerValve&quot; &#x2F;&gt;  </span><br><span class="line">  &lt;Manager className&#x3D;&quot;com.orangefunction.tomcat.redissessions.RedisSessionManager&quot;  </span><br><span class="line">   host&#x3D;&quot;127.0.0.1&quot;  </span><br><span class="line">   port&#x3D;&quot;6379&quot;  </span><br><span class="line">   database&#x3D;&quot;0&quot;  </span><br><span class="line">   maxInactiveInterval&#x3D;&quot;60&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure>

<p>两个tomcat session就共享了</p>
]]></content>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
</search>
